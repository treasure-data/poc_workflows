###Database created by unification workflow where the id_lookup and key_stats tables live
source_db: cdp_unification_bill_divvy_probabalistic_advanced

##Reporting database (output DB where idu_dashboard tables are written) --> sink_database should be SAME as reporting_db
reporting_db: bill_divvy_idu_reporting_advanced
sink_database: bill_divvy_idu_reporting_advanced

##Global Prams
canonical_id_col: 'bill_id'                 #name of the canonical ID col output by unification workflow
prefix: 'idu_'
api_endpoint: api.treasuredata.com
workflow_api_url: api-workflow.treasuredata.com     ##- use 'api-workflow.eu01.treasuredata.com' for EU Region
model_config_table: 'datamodel_build_history'       ## table where model OID is saved to be used for udpating datamodel/dashboard via API
create_dashboard: 'yes'

##Input Tables with ID Stats before and after Unification Process
canonical_id_source_key_stats: canonical_id_source_key_stats   #leave as DEFAULT
canonical_id_result_key_stats: canonical_id_result_key_stats   #leave as DEFAULT
id_lookup_table: ${source_db}.${canonical_id_col}_lookup       #leave as DEFAULT --> name of id_lookup table from unification DB
user_master_id_table: ${source_db}.parent_table             #ONLY needed if source table id stats are output in enriched_master table in unification

##ID unification Project & Workflow
unification_project: 'bill_divvy_orchestration'          #name of the unification WF project
unification_workflow: 'wf1_orchestration'         #name of the sub-wf .dig that runs unification process in the above project
num_runs: 30                                                  #Gets runtimes on the last n-runs of unification WF
unification_output: 'old'         ###-- use 'old' = when source tables are present in source_key_stats tables from IDU, use 'new' = source tables are in enriched_user_master

##id_list
include_all_cols: 'yes' ### yes --> includes all columns in the id_lookup_table. Use 'no' to only show columns in the dash that are listed under the distinct_ids list below.

distinct_ids:
  - col_name: routing_hash_cluster
    id_type: 'custom_id'
    known: 1
    addressable: 0
  - col_name: tax_routing_cluster
    id_type: 'custom_id'
    known: 1
    addressable: 0
  - col_name: divvy_uuid
    id_type: 'custom_id'
    known: 1
    addressable: 0
  - col_name: organization_id
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #1 
  - col_name: duns
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #2  
  - col_name: tax_accnt_routing_addr70_zip_name70
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #3   
  - col_name: tax_accnt_routing_name80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #4  
  - col_name: tax_accnt_routing_domain_addr80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #5
  - col_name: tax_accnt_routing_domain_name80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #6
  - col_name: tax_name90_addr80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #7 
  - col_name: tax_domain_name90
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #8 
  - col_name: tax_domain_name80_addr80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #9 
  - col_name: tax_accnt_routing_domain_name65_addr65
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #10
  - col_name: accnt_routing_addr80_name90
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #11
  - col_name: accnt_routing_domain_name90
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #12
  - col_name: accnt_routing_domain_addr90_name65
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #13
  - col_name: domain_addr80_name80
    id_type: 'custom_id'
    known: 1
    addressable: 0
  # rule #14
  - col_name: domain_addr95_name65
    id_type: 'custom_id'
    known: 1
    addressable: 0    
  # rule #15
  - col_name: addr95_name95
    id_type: 'custom_id'
    known: 1
    addressable: 0  


########### IDU QA Params #######
run_qa: 'yes'              #if == 'yes' --> Runs idu_qa.dig, which gets stats on over-merged IDs
top_k_most_freq_ids: 30   #used to extract all IDs that occur more in more than n-rows in a source table 
merged_ids_limit: 55      #param for deciding the number of Distinct IDs merged to a single canonical_id to be considered as an 'over-merged' record

###Temp Tables list
cleanup_temp_tables: 'yes'
temporary_tables:
- calculations_temp
- calculations_2
- columns_temp
- identities_temp
- session_information_temp
- ids_histogram_temp
- merge_keys_updated_temp
- col_mapping_temp



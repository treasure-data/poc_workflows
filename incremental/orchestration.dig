# timezone: US/Eastern
# schedule:
#  cron>: 00 5 * * *

_export:
  !include : 'config/src_params.yml'
  !include : 'config/email_ids.yml'

  td:
    database: va_config_${sub}

+prepare_db:
  td_ddl>:
  create_databases: ["va_config_${sub}", "${stg}_${sub}",
  "${stg}_${sub}_inc", "cdp_unification_${sub}", "${gld}_${sub}", "${ana}_${sub}"]

+prepare_log_table:
  database: va_config_${sub}
  td>: "queries/log_tbl.sql"

+empty_log_table:
  if>: ${run_all==true}
  _do:
    +del_log:
      td>:
      query: "delete from log_tbl where 1=1"
      database: va_config_${sub}

# +data_profile:
#   _export:
#     step_name: profiling
#     workflow_to_run: wf1_profiling
#   call>: run_workflow_with_logging.dig

# +staging:
#   _export:
#     step_name: staging
#     workflow_to_run: wf2_stage
#     i: 0
#   call>: run_workflow_with_logging.dig

# +first_full_unification: 
#   if>: ${incremental.perform_first}
#   _do: 
#     +first: 
#       +staging_inc:
#         _export:
#           step_name: staging_inc
#           workflow_to_run: wf3_stage_inc
#           i: 0 
#         call>: run_workflow_with_logging.dig

#       +unification:
#         +prep: 
#           td>: 
#           query: "SELECT TD_TIME_PARSE(CAST(CURRENT_TIMESTAMP as VARCHAR)) as time,'full' as unif_type"
#           insert_into: cdp_unification_${sub}.unif_type_log

#         +unify: 
#           _export:
#             step_name: unification
#             workflow_to_run: wf4_unify
#             i: 0
#           call>: run_workflow_with_logging.dig 

# +repeat:
#   for_range>:
#     from: 1
#     to: ${incremental.loops + 1}
#     step: 1
#   _do: 
#     +incremental_unification: 
#       +staging_inc:
#         _export:
#           step_name: staging_inc
#           workflow_to_run: wf3_stage_inc
#           i: ${range.to}
#         call>: run_workflow_with_logging.dig

#       +unification:
#         +prep: 
#           td>: 
#           query: "SELECT TD_TIME_PARSE(CAST(CURRENT_TIMESTAMP as VARCHAR)) as time,'inc' as unif_type"
#           insert_into: cdp_unification_${sub}.unif_type_log

#         +unify: 
#           _export:
#             step_name: unification
#             workflow_to_run: wf4_unify
#             i: ${range.to}
#           call>: run_workflow_with_logging.dig
      
# +enrich_tables:
#   _export:
#     step_name: enrich_tables
#     workflow_to_run: enrich_runner
#     i: 0
#   call>: run_workflow_with_logging.dig


# +unification_dashboard:
#     call>: idu_dashboard/idu_dashboard_launch
  #   i : 0
  # call>: run_workflow_with_logging.dig

# +golden:
#   _export:
#     step_name: golden
#     workflow_to_run: wf5_golden
#     i: 0
#   call>: run_workflow_with_logging.dig


+probabalistic: 
  _export: 
    step_name: probabalistic
    workflow_to_run: wf7_probabalistic
    i: 0
  call>: run_workflow_with_logging.dig


# +refresh_master_segment:
#   _export:
#     step_name: refresh_master_segment
#     workflow_to_run: wf8_refresh_master_segment
#   call>: run_workflow_with_logging.dig

# +run_analytics:
#   _export:
#     step_name: run_analytics
#     workflow_to_run: wf9_analytics
#   call>: run_workflow_with_logging.dig

# Send mail success
# +send_success_alert:
#   for_each>:
#     email: ${email_ids}
#   _do:
#     _export:

#       subject: "Treasure Data Value Accelerator completed Successfully!"
#       receive_email: ${email}
#     call>: utilities/success.dig

# #Send Error Alert
# _error:
#   +send_error_alert:
#     for_each>:
#       email: ${email_ids}
#     _do:
#       _export:
#         subject: "Treasure Data Value Accelerator Failed! Please Review ASAP."
#         receive_email: ${email}
#       call>: utilities/error.dig
